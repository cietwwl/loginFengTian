<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ConsumeRecord">
  <resultMap id="BaseResultMap" type="ConsumeRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="roomId" jdbcType="INTEGER" property="roomid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="totalGame" jdbcType="INTEGER" property="totalgame" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="total" jdbcType="INTEGER" property="total" />
  </resultMap>
  <sql id="Base_Column_List">
    id, roomId, userId, totalGame, createDate, type, total
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from consumeRecord
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from consumeRecord
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="ConsumeRecord">
    insert into consumeRecord (id, roomId, userId, 
      totalGame, createDate, type, 
      total)
    values (#{id,jdbcType=INTEGER}, #{roomid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{totalgame,jdbcType=INTEGER}, #{createdate,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, 
      #{total,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ConsumeRecord">
    insert into consumeRecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roomid != null">
        roomId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="totalgame != null">
        totalGame,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="total != null">
        total,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roomid != null">
        #{roomid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="totalgame != null">
        #{totalgame,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ConsumeRecord">
    update consumeRecord
    <set>
      <if test="roomid != null">
        roomId = #{roomid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="totalgame != null">
        totalGame = #{totalgame,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ConsumeRecord">
    update consumeRecord
    set roomId = #{roomid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      totalGame = #{totalgame,jdbcType=INTEGER},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      total = #{total,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 代理充值记录 -->
  <select id="addUserCardByUserId" parameterType="ConsumeRecord" statementType="CALLABLE" resultType="int">
  		CALL addUserCardByUserId(#{userid},#{total},#{operateId},#{money})
  </select>
  
  <!-- 查询用户充值记录 -->
  <select id="selectUserRechargeRecord" parameterType="hashMap" resultType="java.util.LinkedHashMap">
  	select u.id,u.nickName,cr.total,cr.type,cr.createDate,cr.money from consumeRecord cr 
	JOIN `user` u on cr.userId = u.id
	where 1=1
	<if test="_parameter.containsKey('type')">
		and cr.type=#{type}
	</if>
	<if test="_parameter.containsKey('userId')">
		and cr.userId=#{userId}
	</if>
	<if test="_parameter.containsKey('operateId')">
		and cr.operateId=#{operateId}
	</if>
	<if test="_parameter.containsKey('beginDate')">
    	and cr.createDate &gt;= #{beginDate} 
    </if>
    <if test="_parameter.containsKey('endDate')">
    	and cr.createDate &lt;= #{endDate} 
    </if>
	ORDER BY cr.createDate desc LIMIT #{rowStart},#{pageSize}
  </select>
  <!-- 查询用户充值记录数 -->
  <select id="selectUserRechargeRecordCount" parameterType="hashMap" resultType="int">
  	select count(*) from consumeRecord cr 
	JOIN `user` u on cr.userId = u.id
	where 1=1 
	<if test="_parameter.containsKey('type')">
		and cr.type=#{type}
	</if>
	<if test="_parameter.containsKey('userId')">
		and cr.userId=#{userId}
	</if>
	<if test="_parameter.containsKey('operateId')">
		and cr.operateId=#{operateId}
	</if>
	<if test="_parameter.containsKey('beginDate')">
    	and cr.createDate &gt;= #{beginDate} 
    </if>
    <if test="_parameter.containsKey('endDate')">
    	and cr.createDate &lt;= #{endDate} 
    </if>
  </select>
  
 
  
</mapper>