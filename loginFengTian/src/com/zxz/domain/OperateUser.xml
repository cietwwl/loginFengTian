<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OperateUser">
  <resultMap id="BaseResultMap" type="com.zxz.domain.OperateUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="passWord" jdbcType="VARCHAR" property="password" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userName, passWord, pid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultType="com.zxz.domain.OperateUser">
    select *
    from OperateUser
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectOperateUserSelective" parameterType="com.zxz.domain.OperateUser" resultType="com.zxz.domain.OperateUser">
    select * from OperateUser u
    where 1=1
      <if test="id != null and id!=''">
        and u.id = #{id}
      </if>
      <if test="username != null and username!=''">
        and u.userName = #{username}
      </if>
      <if test="mobile != null and mobile!=''">
        and u.mobile = #{mobile}
      </if>
      <if test="recommendId != null and recommendId!=''">
        and u.recommendId = #{recommendId}
      </if>
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from OperateUser
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zxz.domain.OperateUser">
    insert into OperateUser ( userName, passWord,address,mobile,recommendId,beRecommendId) values (#{username}, #{password}, #{address},#{mobile},#{recommendId},#{beRecommendId})
  </insert>
  <insert id="insertSelective" parameterType="com.zxz.domain.OperateUser">
    insert into OperateUser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        passWord,
      </if>
      <if test="pid != null">
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zxz.domain.OperateUser">
    update OperateUser
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        passWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile},
      </if>
      <if test="address != null">
        address = #{address},
      </if>
      <if test="isDel != null">
        isDel = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zxz.domain.OperateUser">
    update OperateUser
    set userName = #{username,jdbcType=VARCHAR},
      passWord = #{password,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectOperateUserList" parameterType="hashMap" resultType="java.util.LinkedHashMap">
    select * from OperateUser where 1=1 and isDel = 0
    <if test="_parameter.containsKey('userName')">
       and userName = #{userName}
    </if>
    <if test="_parameter.containsKey('passWord')">
       and passWord = #{passWord}
    </if>
    <if test="_parameter.containsKey('mobile')">
       and mobile = #{mobile}
    </if>
    
    <if test="_parameter.containsKey('haveOrderby')">
    	order by 1=1
	    <if test="_parameter.containsKey('consumeCard')">
	    	, OperateUser.consumeCard ${consumeCard}
	    </if>
    	<if test="_parameter.containsKey('registDate')">
    	    , OperateUser.createDate ${registDate} 
    	</if>
    </if>
     limit #{rowStart},#{pageSize}
  </select>
  
  <select id="selectListByMap" parameterType="hashMap" resultType="com.zxz.domain.OperateUser">
    select * from OperateUser where 1=1 
    <if test="_parameter.containsKey('userName')">
       and userName = #{userName}
    </if>
    <if test="_parameter.containsKey('passWord')">
       and passWord = #{passWord}
    </if>
    <if test="_parameter.containsKey('mobile')">
       and mobile = #{mobile}
    </if>
  </select>
  
  <select id="selectOperateUserListTotal" parameterType="hashMap" resultType="int">
    select count(*) from OperateUser where 1=1 and isDel = 0
    <if test="_parameter.containsKey('userName')">
       and userName = #{userName}
    </if>
    <if test="_parameter.containsKey('passWord')">
       and passWord = #{passWord}
    </if>
    <if test="_parameter.containsKey('mobile')">
       and mobile = #{mobile}
    </if>
  </select>
  
   <select id="selectOneRecommonId" parameterType="hashMap" resultType="int">
     SELECT id from operateNumber where isuse = 0 LIMIT 1
  </select>
  
  <update id="updateOneRecommonIdUsed" parameterType="int" >
  	UPDATE operateNumber SET isuse = 1 WHERE id = #{id}
  </update>
  
  <!-- 管理员给代理充值 -->
  <select id="chargeCard" parameterType="ConsumeRecord" statementType="CALLABLE" resultType="int">
  		CALL addOperateUserCard(#{total},#{operateId},#{sendCard})
  </select>
  
</mapper>